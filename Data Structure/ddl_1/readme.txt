实验五-银行模拟


/*********版本信息*********/
1.c和2.c为按照所需功能分步骤实现的测试版。
3.c为最终版。


/*********实验要求*********/

1、利用动态存储结构，实现如下银行业务的事件驱动模拟系统。
2、客户业务分为存款（还款）和取款（借款）两种。银行有两个服务窗口，相应的也有两个队列。客户到达银行后先排第一个队。处理每个客户业务时，如果取款（借款），且金额超出银行现存资金总额而得不到满足，则立刻排入第二个队等候；否则业务处理完后立刻离开银行。每接待完一个存款（还款）的客户，则顺序检查和处理（如果可能）第二个队列中的客户，对能满足的申请者予以满足，不能满足者重新排到第二个队列的队尾。
3、顺序检查第二个队列时，一旦银行资金总额少于或等于刚才第一个队列中最后一个客户（第一种业务）被接待之前的数额，或者本次已将第二个队列检查或处理了一遍，则停止检查（因为此时已不可能还有能满足者）转而继续接待第一个队列的客户。
4、任何时刻都只开一个窗口。检查不需要时间。营业时间结束时所有客户立即离开银行。
5、每个客户交易所需的时间、要办理的款额、距离下一到达事件的时间间隔随机的确定，随机数的上下界交互地从终端读入。
6、通过模拟方法求出客户在银行内逗留的平均时间。


/*********实现思路*********/

1.1、利用线性链表存储事件表，利用链队列q1、q2存储1、2窗口的队列；
1.2、事件结点存储事件的发生时间和事件类型；
1.3、队列中的客户结点存储客户的到达时刻、办理业务所需的时间，以及此顾客待操作的钱数（>0代表存钱或还款，<0代表取钱或借款）；
1.4、事件表按照时间有序，故插入事件时需要比较事件的发生时间，来找到应该插入的地方。其它线性链表和链队列的基本操作容易实现。

2、主函数由事件驱动：
首先进行初始化操作：全局变量置0，产生两个空队列、一个空线性链表，依次读入各个参量，并设置第一个客户的到达事件插入事件表；
当事件表非空时，执行循环：取出表头事件（即余下的事件中最先发生的），判断事件类型，并调用相应的函数。
最后银行关门时，让两个队列中的客户直接离队，并更新客户累计逗留时间，最后计算并输出客户的平均逗留时间。

3、事件分为四类：0表示客户到达事件，1、2分别表示q1、q2头客户离队事件，3表示接待q1头客户的事件，4表示顺序检查并处理q2中客户的事件。
3.1、客户到达事件：产生当前客户结点并入q1；判断在关门之前是否有下一个客户到达，如果有则产生下一个客户的到达事件。如果能接待则立即产生接待此客户事件。
3.2、接待q1头客户事件：取q1头的客户，通过钱数正负判断业务类型：
如果是取钱，则进一步判断银行现存能否够取，够则判断能否及时办完，能则产生q1的离队事件；不够取则立即离队排入q2。
如果是存钱，则先产生顺序检查q2的事件，再产生q1的离队事件。（顺序与具体实现有关，为了让q1的离队事件先发生）。
3.3、顺序检查q2中客户的事件：
如果当前q2没人，且q1有人，则立即产生接待q1头客户的事件。
否则顺序遍历q2一次：
能办理且不会超时，则产生q2的离队事件；
能办理但会超时则在办理过程中就关门了，故直接结束检查；
不能办理则转至q2队尾（出队再入队）。
在遍历中模拟总钱数的加减，如果总钱数减小到小于客户上一次存钱之前的总钱数，则结束遍历。
3.4、客户离队事件：
通过事件类型来获取是哪个队列有客户办理完业务离开银行；
该客户出队，并更新当前银行总钱数和客户累计逗留时间；
判断是否能产生下一接待q1头客户的事件：
①离队的为q1中的客户：如果事件表为空，代表银行关门前所有客户均已到达，且刚才不是存钱；或者如果事件表非空，但下一个事件不是顺序检查q2。
②离队的为q2中的客户，且已经完成了此次顺序检查。
此时可以接待q1中的客户，如果q1中此时有客户，则立即产生接待q1中客户事件。

